###################################################################################################################################################################
fullnameOverride: ""
replicaCount: 1
image:
  repository: 553513852756.dkr.ecr.ap-southeast-1.amazonaws.com/klaytn-dev-backend-service
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
serviceAccount: 
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

web:
  configuration:
    pythonPath: /app/
    djangoSettingsModule: config.settings.production
    debug: "0"
    ethL2Network: "1"
    redisUrl:
    forceScriptName: /txs-baobab/
    csrfTrustedOrigins: https://gateway.ecosystem-dev.klaytn.in
    secretName: klaytn-safe-baobab-secret
    healthcheckPath: check/
    externalDatabase:
      host: ""
      port: 5432
      database: postgres
      userSecretKey: postgresql-user
      passwordSecretKey: postgresql-password
    externalRabbitMQ:
      host: ""
      userSecretKey: rabbitmq-user
      passwordSecretKey : rabbitmq-password
    ethNodeUrl:
    djangoSecretKey:
      djangoSecretKey: djangoSecretKey
  nginx:
    repository: nginx
    tag: 1.23.2
    pullPolicy: Always
  containerPort: 8888
  servicePort: 80
  resources: {}

indexerWorker:
  configuration:
    runMigrations: 1
    workerQueues: default,indexing
  resources: {}

contractsTokensWorker:
  configuration:
    workerQueues: "contracts,tokens"
    runMigrations: "1"
  resources: {}

notificationsWebhooksWorker:
  configuration:
    workerQueues: "notifications,webhooks"
    runMigrations: "1"
  resources: {}

scheduler:
  configuration:
    workerQueues: "contracts,tokens"
    runMigrations: "1"
  resources: {}

flower:
  configuration:
    workerQueues: "contracts,tokens"
    runMigrations: "1"
  resources: {}
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

redis:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 6.2
  architecture: standalone
  master:
    disableCommands: []
  auth:
    enabled: false

postgresql:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 13.7.0
  auth:
    secretKeys:
      adminPasswordKey: postgresql-password

rabbitmq:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/rabbitmq
    tag: 3.11.2
