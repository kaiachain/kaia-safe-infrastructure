global:
  secrets:
    baobabName: &secretBaobabName klaytn-safe-baobab-secret
    cypressName: &secretCypressName klaytn-safe-cypress-secret
    configName: &secretConfigName klaytn-safe-config-secret
    gatewayName: &secretGatewayName klaytn-safe-gateway-secret
  hosts:
    gateway: &hostGateway gateway.ecosystem-dev.klaytn.in
    admin: &admin admin.ecosystem-dev.klaytn.in
  urls:
    gateway: &urlGateway https://gateway.ecosystem-dev.klaytn.in
    admin: &urlAdmin https://admin.ecosystem-dev.klaytn.in

###################################################################################################################################################################
klaytn-safe-txn-baobab:
  enabled: true
  redis:
    enabled: true
    fullnameOverride: &redisBaobabName klaytn-safe-txn-baobab-redis
    nameOverride: *redisBaobabName
  postgresql:
    enabled: true
    fullnameOverride: &postgresqlBaobabName klaytn-safe-txn-baobab-postgresql
    nameOverride: *postgresqlBaobabName
    auth:
      existingSecret: *secretBaobabName
  rabbitmq:
    enabled: true
    fullnameOverride: &rabbitmqBaobabName klaytn-safe-txn-baobab-rabbitmq
    nameOverride: *rabbitmqBaobabName
    auth:
      existingPasswordSecret: *secretBaobabName
      existingErlangSecret: *secretBaobabName

  replicaCount: 1
  image:
    repository: 553513852756.dkr.ecr.ap-southeast-1.amazonaws.com/klaytn-dev-backend-service
    pullPolicy: Always
    tag: "latest"
  web:
    configuration:
      redisUrl: ""
      csrfTrustedOrigins: *urlAdmin 
      secretName: *secretBaobabName
      ethNodeUrl: https://api.baobab.klaytn.net:8651
      externalDatabase:
        host: ""
        port: 5432
        database: baobab
      externalRabbitMQ:
        host: ""

#############################################################################################################################################################33
klaytn-safe-txn-cypress:
  enabled: true
  redis:
    enabled: true
    fullnameOverride: &redisCypressName klaytn-safe-txn-cypress-redis
    nameOverride: *redisCypressName
  postgresql:
    enabled: true
    fullnameOverride: &postgresqlCypressName klaytn-safe-txn-cypress-postgresql
    nameOverride: *postgresqlCypressName
    auth:
      existingSecret: *secretCypressName
  rabbitmq:
    enabled: true
    fullnameOverride: &rabbitmqCypressName klaytn-safe-txn-cypress-rabbitmq
    nameOverride: *rabbitmqCypressName
    auth:
      existingPasswordSecret: *secretCypressName
      existingErlangSecret: *secretCypressName

  replicaCount: 1
  image:
    repository: 553513852756.dkr.ecr.ap-southeast-1.amazonaws.com/klaytn-dev-backend-service
    pullPolicy: Always
    tag: "latest"
  web:
    configuration:
      redisUrl: ""
      csrfTrustedOrigins: *urlAdmin 
      secretName: *secretCypressName
      forceScriptName: /txs-cypress/
      ethNodeUrl: https://klaytn01.fandom.finance
      externalDatabase:
        host: ""
        port: 5432
        database: cypress
      externalRabbitMQ:
        host: ""


##################################################################################################33
klaytn-safe-config:
  enabled: true
  postgresql:
    enabled: true
    fullnameOverride: &postgresqlConfigName klaytn-safe-config-postgresql
    nameOverride: *postgresqlConfigName
    auth:
      existingSecret: *secretConfigName

  replicaCount: 1
  image:
    repository: gnosispm/safe-config-service
    pullPolicy: Always
    tag: "v2.26.0"
  web:
    configuration:
      forceScriptName: /cfg/
      csrfTrustedOrigins: *urlAdmin 
      secretName: *secretConfigName
      configGatewayConfig:
        cgwUrl: https://gateway.ecosystem-dev.klaytn.in/cgw
      externalDatabase:
        host: ""
        port: 5432
        database: config

########################################################################################################
klaytn-safe-gateway:
  enabled: true
  redis:
    enabled: true
    fullnameOverride: &redisGatewayName klaytn-safe-gateway-redis
    nameOverride: *redisGatewayName

  replicaCount: 1
  image:
    repository: gnosispm/safe-client-gateway
    pullPolicy: Always
    tag: "v3.29.0"
  web:
    configuration:
      forceScriptName: /cgw/
      secretName: *secretGatewayName
      redisUri:
      redisUriMainnet:

  ingress:
    enabled: true
    host: *hostGateway
    path: /cgw
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /cgw/health

########################################################################################################
klaytnSafeAdmin:
  ingress:
    enabled: true
    annotations: 
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/success-codes: "200"
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: '443'
    className: alb
    host: *admin
    paths:
      - path: /txs-cypress
        service: klaytn-safe-txn-cypress-web
      - path: /txs-baobab
        service: klaytn-safe-txn-baobab-web
      - path: /cfg
        service: klaytn-safe-config-web

externalSecrets:
  - name: klaytn-safe-baobab-secret
    secretName: klaytn-safe-baobab-secret
    clusterSecretStoreName: &clusterSecretStoreName apse1-all
    secretManagerName: &secretManagerName klaytn-safe-dev
    refreshInterval: &refreshInterval 5m
    secrets:
      - key: djangoSecretKey
        property: txn.baobab.djangoSecretKey
      - key: postgresql-password
        property: txn.baobab.postgresql-password
      - key: postgresql-user
        property: txn.baobab.postgresql-user
      - key: rabbitmq-erlang-cookie
        property: txn.baobab.rabbitmq-erlang-cookie
      - key: rabbitmq-password
        property: txn.baobab.rabbitmq-password
      - key: rabbitmq-user
        property: txn.baobab.rabbitmq-user
  - name: klaytn-safe-cypress-secret
    secretName: klaytn-safe-cypress-secret
    clusterSecretStoreName: *clusterSecretStoreName
    secretManagerName: *secretManagerName
    refreshInterval: *refreshInterval
    secrets:
      - key: djangoSecretKey
        property: txn.cypress.djangoSecretKey
      - key: postgresql-password
        property: txn.cypress.postgresql-password
      - key: postgresql-user
        property: txn.cypress.postgresql-user
      - key: rabbitmq-erlang-cookie
        property: txn.cypress.rabbitmq-erlang-cookie
      - key: rabbitmq-password
        property: txn.cypress.rabbitmq-password
      - key: rabbitmq-user
        property: txn.cypress.rabbitmq-user
  - name: klaytn-safe-config-secret
    secretName: klaytn-safe-config-secret
    clusterSecretStoreName: *clusterSecretStoreName
    secretManagerName: *secretManagerName
    refreshInterval: *refreshInterval
    secrets:
      - key: cgwFlushToken
        property: config.cgwFlushToken
      - key: djangoSuperUserEmail
        property: config.djangoSuperUserEmail
      - key: djangoSuperUserPassword
        property: config.djangoSuperUserPassword
      - key: djangoSuperUserUserName
        property: config.djangoSuperUserUserName
      - key: postgresql-password
        property: config.postgresql-password
      - key: postgresql-user
        property: config.postgresql-user
      - key: rabbitmq-erlang-cookie
        property: config.rabbitmq-erlang-cookie
      - key: secretKey
        property: config.secretKey
  - name: klaytn-safe-gateway-secret
    secretName: klaytn-safe-gateway-secret
    clusterSecretStoreName: *clusterSecretStoreName
    secretManagerName: *secretManagerName
    refreshInterval: *refreshInterval
    secrets:
      - key: exchangeApiKey
        property: gateway.exchangeApiKey
      - key: rocketSecretKey
        property: gateway.rocketSecretKey
      - key: webhookToken
        property: gateway.webhookToken
